package com.shopping;

// Generated Jan 6, 2016 3:15:55 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Prod generated by hbm2java
 */
@Entity
@Table(name = "prod", catalog = "shdb", uniqueConstraints = @UniqueConstraint(columnNames = "prod_code"))
public class Prod implements java.io.Serializable {

	private String id;
	private Brand brand;
	private Cate cate;
	private String prodCode;
	private String prodName;
	private Boolean isActive;
	private String lastUpdateBy;
	private Date lastUpdateTime;
	private Integer versionstamp;
	private Set<ProdAttr> prodAttrs = new HashSet<ProdAttr>(0);
	private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);

	public Prod() {
	}

	public Prod(String id, String prodCode) {
		this.id = id;
		this.prodCode = prodCode;
	}

	public Prod(String id, Brand brand, Cate cate, String prodCode,
			String prodName, Boolean isActive, String lastUpdateBy,
			Date lastUpdateTime, Integer versionstamp, Set<ProdAttr> prodAttrs,
			Set<OrderDetail> orderDetails) {
		this.id = id;
		this.brand = brand;
		this.cate = cate;
		this.prodCode = prodCode;
		this.prodName = prodName;
		this.isActive = isActive;
		this.lastUpdateBy = lastUpdateBy;
		this.lastUpdateTime = lastUpdateTime;
		this.versionstamp = versionstamp;
		this.prodAttrs = prodAttrs;
		this.orderDetails = orderDetails;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, length = 100)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "brand_id")
	public Brand getBrand() {
		return this.brand;
	}

	public void setBrand(Brand brand) {
		this.brand = brand;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cate_id")
	public Cate getCate() {
		return this.cate;
	}

	public void setCate(Cate cate) {
		this.cate = cate;
	}

	@Column(name = "prod_code", unique = true, nullable = false, length = 20)
	public String getProdCode() {
		return this.prodCode;
	}

	public void setProdCode(String prodCode) {
		this.prodCode = prodCode;
	}

	@Column(name = "prod_name", length = 45)
	public String getProdName() {
		return this.prodName;
	}

	public void setProdName(String prodName) {
		this.prodName = prodName;
	}

	@Column(name = "is_active")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "last_update_by", length = 30)
	public String getLastUpdateBy() {
		return this.lastUpdateBy;
	}

	public void setLastUpdateBy(String lastUpdateBy) {
		this.lastUpdateBy = lastUpdateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_update_time", length = 19)
	public Date getLastUpdateTime() {
		return this.lastUpdateTime;
	}

	public void setLastUpdateTime(Date lastUpdateTime) {
		this.lastUpdateTime = lastUpdateTime;
	}

	@Column(name = "versionstamp")
	public Integer getVersionstamp() {
		return this.versionstamp;
	}

	public void setVersionstamp(Integer versionstamp) {
		this.versionstamp = versionstamp;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prod")
	public Set<ProdAttr> getProdAttrs() {
		return this.prodAttrs;
	}

	public void setProdAttrs(Set<ProdAttr> prodAttrs) {
		this.prodAttrs = prodAttrs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prod")
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

}
